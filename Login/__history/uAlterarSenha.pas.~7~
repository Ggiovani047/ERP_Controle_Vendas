unit uAlterarSenha;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons,uDTMConexao;

type
  TfrmAlterarSenha = class(TForm)
    btnAlterar: TBitBtn;
    Label1: TLabel;
    edtSenhaNova: TEdit;
    edtRepetirNovaSenha: TEdit;
    Label2: TLabel;
    btnFechar: TBitBtn;
    Label3: TLabel;
    edtSenhaAtual: TEdit;
    lblUsuarioLogado: TLabel;
    procedure FormShow(Sender: TObject);
    procedure btnFecharClick(Sender: TObject);
    procedure btnAlterarClick(Sender: TObject);
  private
    procedure LimparEdits;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmAlterarSenha: TfrmAlterarSenha;

implementation

{$R *.dfm}

uses  cCadUsuario, uPrincipal;

procedure TfrmAlterarSenha.btnAlterarClick(Sender: TObject);
Var oUsuario:TUsuario;
begin
  if edtSenhaNova <> EmptyStr then begin
    if (edtSenhaAtual.Text = oUsuarioLogado.senha) then begin
      if (edtSenhaNova.Text = edtRepetirNovaSenha.Text) then begin
        if edtSenhaNova.Text <> oUsuarioLogado.senha then begin
          try
            oUsuario := TUsuario.Create(DtmPrincipal.ConexaoDB);
            oUsuario.codigo := oUsuarioLogado.codigo;
            oUsuario.senha := edtSenhaNova.Text;
            oUsuario.AlterarSenha;
            oUsuarioLogado.senha := edtSenhaNova.Text;
            MessageDlg('Senha Alterada', mtInformation, [mbok], 0);
            LimparEdits;
          finally
            FreeAndNil(oUsuario);
          end;
        end
        else begin
          MessageDlg('A nova senha não pode ser igual a senha antiga.', mtInformation, [mbok], 0);
          edtSenhaNova.SetFocus;
        end;
      end
      else begin
        MessageDlg('Senhas digitadas não coincidem.', mtInformation, [mbok], 0);
        edtSenhaNova.SetFocus;
      end;
    end
    else begin
      MessageDlg('Senha Atual está inválida', mtInformation, [mbok], 0);
    end;
  end
  else begin
    MessageDlg('Senha não pode estra vazia.', mtInformation, [mbok], 0);
    edtSenhaNova.SetFocus;
  end;

end;

procedure TfrmAlterarSenha.btnFecharClick(Sender: TObject);
var oUsuario: TUsuario;
begin
   Close;
end;

procedure TfrmAlterarSenha.FormShow(Sender: TObject);
begin
  LimparEdits;
end;

procedure TfrmAlterarSenha.LimparEdits;
begin
  edtSenhaAtual.Clear;
  edtSenhaNova.Clear;
  edtRepetirNovaSenha.Clear;
  lblUsuarioLogado.Caption:=oUsuarioLogado.nome;
end;

end.
